library(lme4)
avg <- predict(lmer(avg~1|do))
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
coefficients(a)
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
for(i in 1:1000){
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
}
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
for(i in 1:1000){
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
}
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
for(i in 1:1000){
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
}
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
for(i in 1:1000){
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(lm(var~x))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
}
a <- summary(glm(var~x,family = Gamma(link = "log")))
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
for(i in 1:1000){
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(glm(var~x,family = Gamma(link = "log")))
if(a$coefficients[2,4] < 0.05){
boxplot(var~x)
}
}
0.05
0.05/1000
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
z <- 1000
for(i in 1:z){
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(glm(var~x,family = Gamma(link = "log")))
if(a$coefficients[2,4] < (0.05/z)){
boxplot(var~x)
}
}
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg <- predict(lmer(avg~1|do))
z <- 10000
for(i in 1:z){
x <- (round(runif(n = n, min = 1, max = 3)))
var <- residuals(lm(avg~x))^2
a <- summary(glm(var~x,family = Gamma(link = "log")))
if(a$coefficients[2,4] < (0.05/z)){
boxplot(var~x)
}
}
lmer(avg~1)
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
lmer(avg~1)
lmer(avg~1+1|do)
plot(lmer(avg~1+1|do))
do
table(do)
residuals(lmer(avg~1+1|do))
avg1 <- residuals(lmer(avg~1+1|do))
plot(avg1~do)
plot(avg~do)
plot(avg~do)
par(mfrow=c(1,2))
plot(avg~do)
plot(avg1~do)
abline(avg~do)
abline(lm(avg~do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do))
abline(lm(avg~do), col="red")
abline(lm(avg~do), col="red", lwd = 2)
n <- 1000
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 1000
p <- 10
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 1000
p <- 100
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 100
p <- 1000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 1000
p <- 100
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 100
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 1000
p <- 100
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
m <- matrix(rnbinom(n*p, size = 20, prob = 0.95), ncol = p)
m[1:5,1:5]
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.95), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.99), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
par(mfrow=c(1,2))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.99), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
avg2 <- residuals(lm(avg~do))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do)
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.99), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- predict(lmer(avg~1+1|do))
avg2 <- predict(lm(avg~do))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do)
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
do
hist(do)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.99), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
avg1 <- avg1 + abs(min(avg1))
avg2 <- residuals(lm(avg~do))
avg2 <- avg2 + abs(min(avg2))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do)
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do)
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.99), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
# avg1 <- avg1 + abs(min(avg1))
avg2 <- residuals(lm(avg~do))
# avg2 <- avg2 + abs(min(avg2))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do, main = "Drop-out as fixed effect")
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do, main = "Drop-out as random effect")
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 20, prob = 0.99), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
# avg1 <- avg1 + abs(min(avg1))
avg2 <- residuals(lm(avg~do))
# avg2 <- avg2 + abs(min(avg2))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do, main = "Dropout\nModelled as fixed effect")
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do, main = "Dropout\nModelledas random effect")
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 100, prob = 0.99), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
# avg1 <- avg1 + abs(min(avg1))
avg2 <- residuals(lm(avg~do))
# avg2 <- avg2 + abs(min(avg2))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do, main = "Dropout\nModelled as fixed effect")
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do, main = "Dropout\nModelledas random effect")
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 30, prob = 0.999), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
# avg1 <- avg1 + abs(min(avg1))
avg2 <- residuals(lm(avg~do))
# avg2 <- avg2 + abs(min(avg2))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do, main = "Dropout\nModelled as fixed effect")
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do, main = "Dropout\nModelledas random effect")
abline(lm(avg1~do), col="red", lwd = 2)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 30, prob = 0.9), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
# avg1 <- avg1 + abs(min(avg1))
avg2 <- residuals(lm(avg~do))
# avg2 <- avg2 + abs(min(avg2))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do, main = "Dropout\nModelled as fixed effect")
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do, main = "Dropout\nModelledas random effect")
abline(lm(avg1~do), col="red", lwd = 2)
cor(avg~so)
cor(avg~do)
cor(avg,do)
cor(avg1,do)
cor(avg2,do)
cor.test(avg2,do)
cor.test(avg1,do)
cor.test(avg,do)
cor.test(avg1,do)
cor.test(avg2,do)
n <- 10000
p <- 5000
m <- matrix(rnbinom(n*p, size = 150, prob = 0.6), ncol = p)
avg <- apply(m,1,mean)
do <- apply(m==0,1,mean)
library(lme4)
avg1 <- residuals(lmer(avg~1+1|do))
# avg1 <- avg1 + abs(min(avg1))
avg2 <- residuals(lm(avg~do))
# avg2 <- avg2 + abs(min(avg2))
par(mfrow=c(1,3))
plot(avg~do)
abline(lm(avg~do), col="red", lwd = 2)
plot(avg2~do, main = "Dropout\nModelled as fixed effect")
abline(lm(avg2~do), col="red", lwd = 2)
plot(avg1~do, main = "Dropout\nModelled as random effect")
abline(lm(avg1~do), col="red", lwd = 2)
setwd("~/Documents/STAT636/STAT636-HW4")
nci60 <- read.csv("NCI60.csv")
nci60data <- nci60[2:ncol(nci60)]
nci60data <- scale(nci60data, center = TRUE, scale = FALSE)
rownames(nci60data) <- make.unique(as.character(nci60[,1]))
dim(var(t(nci60data)))
pca_nci60 <- eigen(var(t(nci60data)))
nci60data %*% pca_nci60$rotation
t(nci60data) %*% pca_nci60$vectors
t(nci60data) %*% pca_nci60$vectors[,1:2]
plot(t(nci60data) %*% pca_nci60$vectors[,1:2])
pca_nci60 <- eigen(var(nci60data))
plot(nci60data %*% pca_nci60$vectors[,1:2])
pc_nci60 <- (nci60data %*% pca_nci60$vectors[,1:2])
set.seed(2)
kmeans(pc_nci60,2)
kmeans(pc_nci60,4)
plot(kmeans(pc_nci60,4))
KM <- kmeans(pc_nci60,4)
points(KM$centers[, 1], KM$centers[, 2], col = 1:2, pch = 20, cex = 5)
points(KM$centers[, 1], KM$centers[, 2], col = 1:4, pch = 20, cex = 5)
plot(Y_2[, 1], Y_2[, 2], col = KM_2$cluster)
points(KM_2$centers[, 1], KM_2$centers[, 2], col = 1:2, pch = 20, cex = 5)
points(Y_2[, 1], Y_2[, 2], col = c(rep("black", 25), rep("red", 25)), pch = 20, cex = 0.6)
KM$cluster
points(pc_nci60, col = KM$cluster, pch = 20, cex = 0.8)
KM$cluster[sort(rownames(nci60data))]
par(mar=c(3,3,1,1))
plot(pc_nci60)
points(KM$centers[, 1], KM$centers[, 2], col = 1:4, pch = 20, cex = 5)
points(pc_nci60, col = KM$cluster, pch = 20, cex = 0.8)
kmeans
D0 <- as.dist(matrix(c(0,3,2,5,3,0,4,1,2,4,0,7,5,1,7,0), nrow = 4, byrow = TRUE))
hclust(D)
hclust(d = D, method = "single")
D0 <- as.dist(matrix(c(0,3,2,5,3,0,4,1,2,4,0,7,5,1,7,0), nrow = 4, byrow = TRUE))
D0
hclust(d = D0, method = "single")
h <- hclust(d = D0, method = "single")
h$merge
h <- hclust(d = as.dist(D0), method = "single")
h$merge
D[abs(h$merge[1,])]
D0[abs(h$merge[1,])]
min(D0[abs(h$merge[1,])])
